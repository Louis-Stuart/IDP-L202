#include <Adafruit_MotorShield.h>


Adafruit_MotorShield AFMS = Adafruit_MotorShield();
Adafruit_DCMotor *leftMotor = AFMS.getMotor(1);
Adafruit_DCMotor *rightMotor = AFMS.getMotor(2);
int leftmostlinesensorPin = 0;
int leftlinesensorPin = 1;
int rightlinesensorPin = 2;
int rightmostlinesensorPin = 3;


//define constant

int lineSensors[4];
bool run_once = false;
int low_speed = 0;
int high_speed = 255;
char forward = BACKWARD;
char backward = FORWARD;

//predefine function
void lineSensorRead();
void lineFollowingStraight();
void stop(int t=0);
void straight(int speed=high_speed, int t=0);
void reverse(int speed=high_speed, int t=0);
void turn(int high, int low, bool left);
void turn_right();
void turn_left();

void setup() {
  Serial.begin(9600);           
  if (!AFMS.begin()) {        
    Serial.println("Could not find Motor Shield. Check wiring.");
    while (1);
  }
  pinMode(leftmostlinesensorPin, INPUT); // declare LED as output
  pinMode(leftlinesensorPin, INPUT); // declare Micro switch as input
  pinMode(rightlinesensorPin, INPUT); // declare LED as output
  pinMode(rightmostlinesensorPin, INPUT); // declare Micro switch as input
}


//main
void loop() {
  //test any function by adding it in
  lineFollowingStraight();
}

void stop(int t=0) {
  leftMotor->setSpeed(0);
  rightMotor->setSpeed(0);
  //might need to run(release)
  delay(t);
}

void straight(int speed=high_speed, int t=0) {
  leftMotor->run(forward);
  rightMotor->run(forward);
  leftMotor->setSpeed(speed);
  rightMotor->setSpeed(speed);
  delay(t);
}

void reverse(int speed=high_speed, int t=0) {
  leftMotor->run(backward);
  rightMotor->run(backward);
  leftMotor->setSpeed(speed);
  rightMotor->setSpeed(speed);
  delay(t); 
}

void turn(int high, int low, bool left) {
  leftMotor->run(forward);
  rightMotor->run(forward);
  if(left){
    leftMotor->setSpeed(high);
    rightMotor->setSpeed(low);
  }else{
    leftMotor->setSpeed(low);
    rightMotor->setSpeed(high);
  }
}

void turn_left() {
  turn(high_speed,low_speed,true);
}

void turn_right() {
  turn(high_speed,low_speed,false);
}


void lineSensorRead(){
  lineSensors[0] = digitalRead(leftmostlinesensorPin);
  lineSensors[1] = digitalRead(leftlinesensorPin);
  lineSensors[2] = digitalRead(rightlinesensorPin);
  lineSensors[3] = digitalRead(rightmostlinesensorPin);
}


void lineFollowingStraight() {
  lineSensorRead();
  Serial.print(lineSensors[0]);
  Serial.print(lineSensors[1]);
  Serial.print(lineSensors[2]);
  Serial.println(lineSensors[3]);
  if (!lineSensors[0] && !lineSensors[1] && !lineSensors[2] && !lineSensors[3]){
    straight();
  }

  if (!lineSensors[0] && lineSensors[1] && !lineSensors[2] && !lineSensors[3]) {
    turn_left();
  }

  if (!lineSensors[0] && !lineSensors[1] && lineSensors[2] && !lineSensors[3]) {
    turn_right();
  }

}
